install.packages("ggplot2, plot.ly")
install.packages("ggplot2")
install.packages("plotly")
gg
geom_point(aes(Sepal.Length, Sepal.Width,color=Species,size=Petal.Length)
gg
gg <- ggplot(iris) + geom_point(aes(Sepal.Length, Sepal.Width,color=Species,size=Petal.Length)
gg <- ggplot(iris) + geom_point(aes(Sepal.Length, Sepal.Width,color=Species,size=Petal.Length))
gg <- ggplot(iris) +
geom_point(aes(Sepal.Length, Sepal.Width,color=Species,size=Petal.Length))
?ggplot2
library(ggplot2)
library(plotly)
library(plotly)
gg <- ggplot(iris) +
geom_point(aes(Sepal.Length, Sepal.Width,color=Species,size=Petal.Length))
gg
gg <- ggplot(iris) +
geom_point(aes(Sepal.Length, Sepal.Width,color=Species,size=Petal.Length))
gg
htmlwidgets::saveWidget(gg, "test.html")
library(ggplot2)
library(plotly)
gg <- ggplot(iris) +
geom_point(aes(Sepal.Length, Sepal.Width,color=Species,size=Petal.Length))
gg
htmlwidgets::saveWidget(gg, "test.html")
library(ggplot2)
library(plotly)
gg <- ggplot(iris) +
geom_point(aes(Sepal.Length, Sepal.Width,color=Species,size=Petal.Length))
gg
htmlwidgets::saveWidget(gg, filename="test.html")
htmlwidgets::saveWidget(gg, "test.html")
library(ggplot2)
library(plotly)
gg <- ggplot(iris) +
geom_point(aes(Sepal.Length, Sepal.Width,color=Species,size=Petal.Length))
gg
htmlwidgets::saveWidget(gg, "test.html")
library(ggplot2)
library(plotly)
library(htmlwidgets)
library(widgetframe)
p <- plot_ly(x = 1:10, y = 1:10) %>% add_markers()
widget_file_size <- function(p) {
d <- tempdir()
withr::with_dir(d, htmlwidgets::saveWidget(p, "index.html"))
f <- file.path(d, "index.html")
mb <- round(file.info(f)$size / 1e6, 3)
message("File is: ", mb," MB")
}
widget_file_size(p)
widget_file_size(partial_bundle(p))
p
saveWidget(p, "p1.html", selfcontained = F, libdir = "lib")
htmltools::tags$iframe(
src = "p1.html",
scrolling = "no",
seamless = "seamless",
frameBorder = "0"
)
htmltools::tags$iframe(
src = "p1.html",
scrolling = "no",
seamless = "seamless",
frameBorder = "0",
height: 500
)
htmltools::tags$iframe(
src = "p1.html",
scrolling = "no",
seamless = "seamless",
frameBorder = "0"
)
library(ggplot2)
library(plotly)
library(htmlwidgets)
library(widgetframe)
install.packages("utils")
install.packages("utils")
install.packages("utils")
install.packages("utils")
install.packages("utils")
install.packages("utils")
install.packages("utils")
install.packages("utils")
data <- read.csv("https://opendata.ecdc.europa.eu/covid19/casedistribution/csv",
na.strings = "", fileEncoding = "UTF-8-BOM")
data
colnames(data)
